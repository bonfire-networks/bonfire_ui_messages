<div class={
  "flex-1 w-full md:w-[390px] md:max-w-[390px] md:border-r border-base-content/10 max-h-[100vh] overflow-y-auto",
  "!hidden md:!block": e(@thread_active, false)
}>
  <div class="sticky top-0 bg-base-100 z-[9999999999] pt-safe">
    <div class="min-h-[50px] border-b border-base-content/10 flex justify-between items-center px-3">
      <label for="sidebar-drawer" class="xl:hidden mr-3 btn btn-circle btn-ghost btn-sm">
        {#if is_map(current_user(@__context__))}
          <Bonfire.UI.Common.AvatarLive
            bg_class="rounded-full"
            class="inline-block object-cover w-full cursor-pointer rounded-full"
            src={Media.avatar_url(current_user(@__context__))}
            user_id={current_user_id(@__context__)}
          />
        {#else}
          <#Icon iconify="hugeicons:menu-02" class="w-5 h-5" />
        {/if}
      </label>
      <h3 class="text-lg font-bold flex-1">{l("Messages")}</h3>
      <div class="flex items-center gap-2">
        <StatelessComponent
          module={maybe_component(Bonfire.UI.Social.HeaderAsideNotificationsSeenLive, @__context__)}
          feed_id={:inbox}
          feed_name="messages"
        />
      </div>
    </div>
    <div class="p-2">
      <Bonfire.UI.Messages.NewDmLive />
    </div>
    <!-- Message Tabs -->
    <div role="tablist" class="tabs border-b border-base-content/20 w-full tabs-border">
      <LinkLive
        to="/messages?tab=all"
        role="tab"
        class={"tab flex-1", "tab-active": (@selected_tab || "all") == "all"}
      >{l("All")}</LinkLive>
      <LinkLive
        to="/messages?tab=followed_only"
        role="tab"
        class={"tab flex-1", "tab-active": @selected_tab == "followed_only"}
      >{l("Followed only")}</LinkLive>
      <LinkLive
        to="/messages?tab=not_followed"
        role="tab"
        class={"tab flex-1", "tab-active": @selected_tab == "not_followed"}
      >{l("Other")}</LinkLive>
    </div>
  </div>
  {#if e(@threads, :edges, []) != []}
    <!-- <Bonfire.UI.Common.LoadPreviousLive
      live_handler={Bonfire.Messages}
      page_info={e(@threads, :page_info, nil)}
      context={@context}
    /> -->

    <ul id="message_threads" class="flex flex-col divide-y divide-base-content/10">
      <li
        class={
          "hover:bg-base-content/5 relative",
          "message-active": @thread_id == e(activity, :replied, :thread_id, nil)
        }
        :for={%{activity: activity} <- e(@threads, :edges, [])}
      >
        <LinkPatchLive
          to={permalink(
            e(activity, :replied, nil),
            e(activity, :object, nil) || e(activity, :object_id, nil),
            @selected_tab
          )}
          class="block"
        >
          <div class="relative w-full indicator">
            <span
              :if={!e(activity, :seen, nil) and e(activity, :subject_id, nil) != current_user_id(@__context__)}
              class="indicator-item badge badge-xs bg-base-content/30 right-6 bottom-1 top-[auto] invisible unread-activity"
            >
            </span>
            <div class="flex items-center w-full p-4">
              <div class="flex-1 w-full min-w-0 sm:flex sm:items-center sm:justify-between">
                <div class="w-full">
                  <div class="flex gap-3 items-center justify-between">
                    <div
                      data-id="thread_participants"
                      class="flex-1 max-w-[320px] text-sm font-semibold truncate text-base-content"
                    >
                      {!-- FIXME: do not look this up on render --}
                      {#case {LiveHandler.thread_meta(:title, e(activity, :replied, :thread_id, nil), activity, nil,
                           current_user: current_user(@__context__)
                         ), e(activity, :replied, :thread, :named, :name, nil)}}
                        {#match {participant_names, nil}}
                          {participant_names}
                        {#match {participant_names, thread_name}}
                          {participant_names}:
                          <span class="text-base-content/70">{thread_name}</span>
                      {/case}
                    </div>
                    <div class="flex items-center mt-0.5 text-xs text-base-content/70">
                      <p><time datetime={DatesTimes.date_from_pointer(activity)}>{DatesTimes.date_from_now(activity)}</time></p>
                    </div>
                  </div>
                  <div class="mt-1">
                    <p class="text-sm max-w-[240px] truncate text-base-content/70 font-regular">
                      <span class="font-medium text-base-content">
                        {if e(activity, :subject_id, nil) == current_user_id(@__context__),
                          do: l("Me"),
                          else: e(activity, :subject, :profile, :name, nil)}:
                      </span>
                      {Text.text_only(
                        e(activity, :object, :post_content, :name, nil) ||
                          e(activity, :object, :post_content, :summary, nil) ||
                          e(activity, :object, :post_content, :html_body, nil)
                      )}
                    </p>
                  </div>
                </div>
              </div>
              {!-- <div class="flex-shrink-0 ml-5">
                <div class="flex items-center mt-1 text-xs text-base-content/70">
                  <p><time datetime={"#{date_from_pointer(activity)}"}>{DatesTimes.date_from_now(activity)}</time></p>
                </div>
              </div> --}
            </div>
          </div>
        </LinkPatchLive>
      </li>
    </ul>

    <Bonfire.UI.Common.LoadMoreLive
      live_handler={Bonfire.Messages}
      page_info={e(@threads, :page_info, nil)}
      context={@context}
    />
  {#else}
    <div class="flex flex-col items-center gap-2 my-8 place-content-center">
      <div class="text-xl font-bold">{l("Welcome to your inbox")}</div>
      <div class="px-6 text-base text-center text-base-content/70">
        {l(
          "Drop a line, write a direct message with other users in the fediverse. Be aware that DMs are not encrypted (yet)."
        )}
      </div>
      <Bonfire.UI.Common.SmartInputButtonLive
        class="gap-2 mt-3 btn btn-sm btn-soft btn-primary"
        showing_within={:messages}
        smart_input_opts={%{
          recipients_editable: true,
          create_object_type: "message"
        }}
        icon="tabler:mail-plus"
        prompt={"#{l("Send a message")}..."}
      />
    </div>
  {/if}
</div>
